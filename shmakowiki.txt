ometa ShmakoWiki {
    oneOf :a ?(a.length == 1) = apply(a.pop()),
    oneOf :a ?(a.length > 1) = apply(a.pop()) | oneOf(a),

    escapedChar = '~' char:c -> c,
    escaped = escapedChar+:c -> [`escaped, c.join('')],

    b = seq('**'),
    i = seq('//'),
    s = ~' ' seq('--') ~' ',
    linkStart = seq('((') | seq('[['),
    linkEnd = seq('))') | seq(']]'),
    l = linkStart | linkEnd,
    lineBreak = seq('\\\\') -> [`lineBreak, []],
    special = (b | i | s | l | lineBreak):c -> [`special, c],

    between :t :n = (apply(t) -> ShmakoWiki.arrAdd(n, t)):nn (~oneOf(ShmakoWiki.arrCopy(nn)) allInline(nn))*:c apply(t) -> c,
    between_ :t = apply(t) (~special text)*:c (~~special | end) -> c,

    bold :n = between(`b, n):c -> [`bold, c],
    bold_ = between_(`b):c -> [`bold_, c],

    italic :n = between(`i, n):c -> [`italic, c],
    italic_ = between_(`i):c -> [`italic_, c],

    strike :n = between(`s, n):c -> [`strike, c],
    strike_ = between_(`s):c -> [`strike_, c],

    link :n = (linkStart -> ShmakoWiki.arrAdd(n, 'l')):nn
              (~space ~linkEnd char)+:c spacesNoNl
              (~oneOf(ShmakoWiki.arrCopy(nn)) allInline(nn))*:cc
              linkEnd -> [`link, c.join(''), cc],
    link_ = linkStart (~space char)+:c (~~space | ~~special | end) -> [`link_, c.join('')]
          | linkEnd -> '',

    mdash = seq(' -- ') -> ' â€“ ',

    text = (~special ~escapedChar (mdash | char))+:c -> c.join('')
           | escaped:c -> c,

    inline :n = bold(n) | italic(n) | strike(n) | link(n) | lineBreak | text,
    inline_ = bold_ | italic_ | strike_ | link_,

    allInline :n = inline(n) | (~inline(n) inline_),
    topInline = allInline([])+,


    spacesNoNl   = (~'\n' space)*,

    nl = '\n' (spacesNoNl '\n')+,

    uli = spacesNoNl:s '*' ~'*' spacesNoNl -> s.join(''),
    oli = spacesNoNl:s digit+ '.' spacesNoNl -> s.join(''),

    anyLi = uli | oli,
    anySubLi :ss = anyLi:s ?(s.length > ss.length) -> s,

    headerStart = '='+:c spacesNoNl -> (c.join('').length - 1),
    headerEnd = '='* (('\n' (spacesNoNl '\n')*) | end),
    header = headerStart:l ((~headerEnd char)+:cc -> cc.join('')):c headerEnd -> ['header' + (l <= 6 ? l : 6), ShmakoWiki.matchAll(c, 'topInline')],

    blockEnd = nl | ('\n' ~~anyLi) | ('\n' ~~headerStart) | end,

    para = ~anyLi ((~blockEnd char)+:cc -> cc.join('')):c blockEnd -> [`para, ShmakoWiki.matchAll(c, 'topInline')],


    listItem :t :l = apply(t):s ?(s.length >= l.length)
                     ((~blockEnd char)+:cc -> ShmakoWiki.matchAll(cc.join(''), 'topInline')):c blockEnd
                     (~~(anySubLi(s):ss) anyList(ss))*:ll -> { if (ll) c = ShmakoWiki.arrJoin(c, ll); c },

    ulistItem :l = listItem(`uli, l):c -> [`ulistItem, c],
    olistItem :l = listItem(`oli, l):c -> [`olistItem, c],

    ulist :l = ulistItem(l)+:c -> [`ulist, c],
    olist :l = olistItem(l)+:c -> [`olist, c],

    anyList :l = ulist(l) | olist(l),

    allBlock = anyList('') | header | para,

    topLevel = allBlock+
}

ShmakoWiki.arrJoin = function(arr1, arr2) {
    var newArr = ShmakoWiki.arrCopy(arr1);
    for (var i = 0; i < arr2.length; i++) {
       newArr[newArr.length] = arr2[i];
    }
    return newArr;
};

ShmakoWiki.arrCopy = function(arr) {
    var newArr = [];
    for (var i = 0; i < arr.length; i++) {
       newArr[newArr.length] = arr[i];
    }
    return newArr;
};

ShmakoWiki.arrAdd = function(arr, elem) {
    for (var i = 0; i < arr.length; i++) {
       if (arr[i] == elem) return arr;
    }
    arr[arr.length] = elem;
    return arr;
};

